// ==UserScript==
// @name         Faction Bank AutoFill (PDA Only)
// @namespace    http://tampermonkey.net/
// @version      1.2.3
// @description  PDA-only autofill for faction bank form
// @match        https://www.torn.com/factions.php*
// @grant        none
// @license      MIT
// ==/UserScript==

(async function () {
    'use strict';

    const name = "OgBob";
    const log = (...args) => console.log("[AutoFill]", ...args);
    const sleep = (ms) => new Promise((res) => setTimeout(res, ms));

    function trigger(el, value) {
        el.focus();
        el.value = value;
        el.dispatchEvent(new Event("input", { bubbles: true }));
    }

    async function waitForElement(selector, tries = 30) {
        for (let i = 0; i < tries; i++) {
            const el = document.querySelector(selector);
            if (el) return el;
            await sleep(200);
        }
        return null;
    }

    async function waitForBalanceText(name, tries = 30) {
        const pattern = `${name}\`s current balance is $`;
        for (let i = 0; i < tries; i++) {
            const el = [...document.querySelectorAll("p, span, div")]
                .find(e => e.textContent?.includes(pattern));
            if (el) {
                const match = el.textContent.match(/\$([\d,]+)/);
                if (match) return match[1].replace(/,/g, "");
            }
            await sleep(200);
        }
        return null;
    }

    log("üöÄ Autofill starting");

    const nameInput = await waitForElement('input[name="searchAccount"]');
    if (!nameInput) return log("‚ùå Name input not found");

    trigger(nameInput, name);
    log("‚úÖ Name filled");

    const balance = await waitForBalanceText(name);
    if (!balance) return log("‚ùå Balance not found");

    const amountInput = await waitForElement('input[class*="input-money"]');
    if (!amountInput) return log("‚ùå Amount input not found");

    trigger(amountInput, balance);
    log(`‚úÖ Amount filled: $${balance}`);
})();
